/*
问题描述
【问题】在 n 枚外观相同的硬币中，有一枚是假币，并且已知假币较轻。通过天平来比较两组硬币，从而得知两组硬币的重量是否相同，或者哪一组更轻一些，假币问题要求设计一个高效的算法来检测出这枚假币。找出假币的位置。要求根据算法描述来实现。

【想法】最自然的想法是一分为二，也就是把 n 枚硬币分成两组，每组有 n/2 枚硬币，时间性能？如果一分为三，前两组有 n/3 枚硬币，其余作为第三组，时间性能？

【算法】设函数Coin实现假币问题，通过累加天平两端硬币的重量来模拟天平的操作，算法如下：

算法：假币问题Coin 输入：硬币所在数组的下标范围 low 和 high，硬币的个数 n 输出：假币在硬币集合中的序号

1. 如果 n 等于1，则该硬币即为假币，输出对应的序号，算法结束；

2. 计算 3 组的硬币个数 num1、num2 和 num3；

3. add1 = 第 1 组硬币的重量和；add2 = 第 2 组硬币的重量和；

4. 根据情况执行下述三种操作之一：

4.1 如果 add1<add2，则在第 1 组硬币中查找；

4.2 如果 add1>add2，则在第 2 组硬币中查找；

4.3 如果 add1=add2，则在第 3 组硬币中查找；


输入描述
第一行是一个整数n，表示在 n 枚外观相同的硬币。

第二行是这些硬币，用1表示真硬币，用0表示假币。例如：1 1 0 1 1 1 1 1

输出描述
假币的位置

样例输入
8

1 1 0 1 1 1 1 1

样例输出
3

提示说明
0代表假币，在第三个，所以输出3.
*/

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin >> n;

    int c[n];
    for (int i = 0; i < n; i++)
    {
        cin >> c[i];
    }

    for (int i = 0; i < n; i++)
    {
        if (c[i] == 0)
        {
            cout << i + 1;
        }
        
    }

    return 0;
}