/*
描述
世人皆好奇lxy的体重，但lxy自己不愿意说，她由两个舍友lwj和knt表示可以透露lxy的体重，但不会直接说出数值。
目前已知lxy的体重是1到300斤之间的某个整数（包括1和300）。

lwj喜欢透露lxy的体重除以a的余数等于b，knt喜欢透露lxy的体重大于d或者小于d。
当她们透露了一定的消息以后，就可以唯一确定lxy的体重，当然也有可能因为自相矛盾而导致无解，也有可能有多个可能的解。

现有lwj和knt的一系列透露的消息，分别是lwj一句话knt一句话这样的循环，想知道最终是否能够确定lxy的体重。

输入
只有一组测试案例。

第1行是一个正整数n，表示lwj和knt一共透露了多少句话（两个人说话的总和）

第2到第n+1行是她们说的n句话，其中第偶数行是lwj说的，每行包括两个整数a、b（a>b>=0），
表示lxy的体重除以a的余数等于b。第奇数行是knt说的，每行包括两个整数c和d（c只会是1或者-1，d>=0），
如果c=1，表示lxy的体重大于d；如果c=-1，则表示lxy的体重小于d。

输出
如果根据她们说的n句话，lxy的体重是无解的，则输出-1；如果lxy的体重有多个合法的解，则输出0；
如果lxy的体重有唯一解，则输出体重值。不要换行。

样例输入
4

12 0

1 110

10 0

-1 130

样例输出
120

提示说明
4句话分别代表体重除以12余0，体重大于110，体重除以10余0，体重小于130，故可以断定lxy的体重是120
*/

#include<iostream>
using namespace std;

int main() 
{
    int n; // 存储输入的整数序列的数量
    cin >> n; // 读取整数序列的数量
    int w[300] = {0}; // 初始化一个大小为300的数组w，所有元素默认为0

    for (int i = 0; i < n; i++)
    {
        int a, b;
        cin >> a >> b;
        if (i % 2 == 0)
        {
            for (int j = 0; j < 300; j++)
            {
                if ((j + 1) % a != b)
                {
                    w[j] = 1;
                }
            }
        }
        else
        {
            if (a == 1)
            {
                for (int j = b - 1; j > 0; j--)
                {
                    w[j] = 1;
                }
            }
            else
            {
                for (int j = b; j < 300; j++)
                {
                    w[j] = 1;
                }
                
            }
        }
    }
    int cnt = 0;
    int k = 0;
    for (int i = 0; i < 300; i++)
    {
        if (w[i] == 0)
        {
            cnt++;
            k = i + 1;
        }
    }
    if (cnt == 1) 
    { // 如果只有一个位置的值为0
        cout << k; // 输出该位置的索引+1
    } 
    else if (cnt > 1) 
    { // 如果有多个位置的值为0
        cout << 0; // 输出0
    } 
    else 
    { // 如果没有位置的值为0
        cout << -1; // 输出-1
    }
    return 0;
}