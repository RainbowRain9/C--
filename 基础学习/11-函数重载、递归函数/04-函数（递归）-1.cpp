/*
描述
m块饼每天吃1块或者2块，吃到完为止。问有多少种不同的吃法。
注意：第1天吃2块第2天吃1块和第1天吃1块第2天吃2块，是两种不同的吃法。

输入
一个正整数n，表示n组案例。

每组案例由一个正整数m构成。（m<=20）

输出
针对每组案例，输出共有多少种吃完的方法。

每组案例输出完都要换行。

样例输入
1

10

样例输出
89
*/

#include <iostream> // 引入输入输出流库
using namespace std;

// 函数 count: 计算吃完m块饼的不同方法数量
int count(int m)
{
    if (m == 1)
    {             // 如果只有1块饼
        return 1; // 只有一种吃法，即吃掉它
    }
    else if (m == 2)
    {             // 如果只有2块饼
        return 2; // 有两种吃法：第一天吃1块，第二天吃1块；或者第一天吃2块
    }
    else
    {                                       // 如果饼的数量大于2
        return count(m - 1) + count(m - 2); // 吃法总数是吃掉m-1块和m-2块的吃法之和
    }
}

int main()
{
    int n;
    cin >> n; // 输入测试用例的数量
    for (int i = 0; i < n; i++)
    { // 循环处理每个测试用例
        int m;
        cin >> m;                 // 输入饼的数量m
        cout << count(m) << endl; // 输出吃完m块饼的不同方法数量
    }
    return 0; // 程序结束
}
