/*
问题描述
问题描述: 给你一个仅有红，白，蓝三种颜色组成的10个条块序列，现需要你将这些条块按照红，白，蓝的顺序排好，可用1代表红色，2代表白色，3代 表蓝色，要求时间复杂度为O(n)。例如，给定彩色条块序列为：

｛蓝、白、红、白、蓝、红、白、白、红、蓝｝

则要求排列结果为：

｛红、红、红、白、白、白、白、蓝、蓝、蓝｝







输入描述
第1行是一个正整数m，表示后面是m个整数。

输出描述
采用颜色排序，输出从小大到大排序结果。

样例输入
10 2 1 3 2 3 3 1 2 3 2

样例输出
1 1 2 2 2 2 3 3 3 3

提示说明
输出最后不需要回车换行

*/

#include <iostream>
using namespace std;
int main()
{
    int m;
    cin >> m;
    int a[m];
    for (int i = 0; i < m; i++)
    {
        cin >> a[i];
    }

    for (int i = 0; i < m; i++)
    {
        for (int j = i + 1; j < m; j++)
        {
            if (a[i] > a[j])
            {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
        if (i == 0)
        {
            cout << a[i];
        }
        else
        {
            cout << " " << a[i];
        }
    }

    return 0;
}