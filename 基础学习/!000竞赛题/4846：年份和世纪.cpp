/*
问题描述
一个朝代从a年兴起，到b年灭亡，问这个朝代经历了多少年？跨越了几个世纪？（头尾a、b年都算）

输入描述
两个整数a和b，表示从公元a年到b年。

保证a和b非0，且a<=b。a和b的绝对值最多不会大于100万。

如果是负数，表示公元前。

输出描述
两个整数，第一个表示这个朝代经历的年份数量，第二个表示这个朝代经历的世纪数量。

两个整数之间有一个空格，不要换行。

样例输入
-123 307

样例输出
430 6

提示说明
不存在公元0年，公元前1年的下一年是公元1年。

公元1年至公元100年为1世纪，公元101年至公元200年为2世纪，以此类推。公元2001年至公元2100年为21世纪。

公元前1年至公元前100年为公元前1世纪，公元前101年至公元前200年为公元前2世纪，以此类推。

样例中，从公元前123年到公元307年，一共经历了430年（注意不是431，因为没有公元0年），一共经历了6个世纪，分别是公元前2世纪、公元前1世纪、公元1世纪、公元2世纪、公元3世纪、公元4世纪。
*/

#include <iostream>
using namespace std;

int main()
{
    int a, b, year, c1, c2;
    cin >> a >> b; // 输入起始年份 a 和终止年份 b

    // 计算年份数量
    year = b - a;
    if (a < 0 && b < 0 || a > 0 && b > 0) // 如果 a 和 b 同为负数或同为正数
    {
        year++; // 需要加 1 来包括起始年和终止年
    }

    // 计算起始年份的世纪
    if (a > 0) // 如果 a 是正数（公元后）
        c1 = (a + 99) / 100; // 计算公元后的世纪
    else // 如果 a 是负数（公元前）
        c1 = (a + 1) / 100; // 计算公元前的世纪

    // 计算终止年份的世纪
    if (b > 0) // 如果 b 是正数（公元后）
        c2 = (b + 99) / 100; // 计算公元后的世纪
    else // 如果 b 是负数（公元前）
        c2 = (b + 1) / 100; // 计算公元前的世纪

    // 输出年份数量和世纪数量
    cout << year << " " << c2 - c1 + 1 << endl; // 世纪数量 = 终止世纪 - 起始世纪 + 1

    return 0;
}