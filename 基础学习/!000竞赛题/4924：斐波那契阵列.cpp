/*
问题描述
输出一个n行20列的阵列，第一行由斐波那契数列的第1项填充，第二行由斐波那契数列的第2项填充，以此类推。

注意每行只有20列，不要输出超过20列。假设数列中有一项是123，那么那一行是12312312312312312312。

输入描述
只有一组案例。一个正整数n表示阵列有几行。（n<=60）

输出描述
按照问题描述所说，输出n行阵列。最后一行输出完也有一次换行。

样例输入
7

样例输出
11111111111111111111

11111111111111111111

22222222222222222222

33333333333333333333

55555555555555555555

88888888888888888888

13131313131313131313



提示说明
注意数列每项的取值范围
*/

#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;

    long long a, b, temp, c;
    a = 1;
    b = 1;
    for (int i = 0; i < n; i++)
    {
        temp = a;

        string s = to_string(temp);
        while (s.length() < 20)
        {
            s += to_string(temp);
        }

        cout << s.substr(0, 20) << endl;

        if (i < n - 1)
        {
            c = a + b;
            a = b;
            b = c;
        }
    }

    return 0;
}