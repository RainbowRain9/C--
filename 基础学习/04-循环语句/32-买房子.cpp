/*
描述
    某程序员开始工作，年薪a万，他希望在厦门买房子，现在价格是200万，
    假设房子价格以每年百分之b的速度增长，并且该程序员未来年薪不变，且不吃不喝，不用交税，
    每年所得a万全都积攒起来，问是否能在20年之内买下这套房子？
    如果可以，那么第几年能够买下这套房子？（第一年年薪a万，房价200万）

输入
    一个正整数n，表示案例的数量。
    每组案例由两个正整数a和b组成（10<=a<=50, 1<=b<=20)

输出
    如果在第20年或者之前就能买下这套房子，则输出一个整数M，表示最早需要在第M年能买下，否则输出No。
    每组案例输出完都要换行。

样例输入
    1
    50 10

样例输出
    8
*/

#include <iostream>
using namespace std;

int main()
{
    int n;    // 存储案例的数量
    cin >> n; // 从标准输入读取案例数量

    while (n--)
    {                  // 对于每个案例
        float a, b;    // 存储程序员的年薪和房价年增长率
        cin >> a >> b; // 从标准输入读取年薪和房价年增长率

        float housePrice = 200; // 初始化房价为200万
        int year = 0;           // 初始化年份计数器
        int totalSavings = a;   // 初始化程序员的积蓄为第一年的年薪

        // 循环模拟每年的情况，直到第20年
        while (year < 20)
        {
            // 更新房价，每年增长b%
            housePrice *= (1 + b / 100);
            // 更新积蓄，每年增加年薪a
            totalSavings += a;
            // 如果积蓄足够买房
            if (totalSavings >= housePrice)
            {
                // 输出最早能买房的年份（加1是因为第一年是起始年）
                cout << year + 2 << endl;
                // 跳出循环，因为已经找到答案
                break;
            }
            // 年份增加
            year++;
        }

        // 如果循环正常结束（没有在内部break），说明20年内没有攒够钱买房
        if (year == 20)
        {
            // 输出No
            cout << "No" << endl;
        }
    }

    return 0; // 程序结束
}