{"data":[{"name":"2024-11-14 22:57:43","id":1731596263175,"body":"class Solution\r\n{\r\npublic:\r\n    // 使用哈希表存储数组元素和对应的下标\r\n    // 时间复杂度: O(n), 空间复杂度: O(n)\r\n    vector<int> twoSum(vector<int> &nums, int target)\r\n    {\r\n        // 创建哈希表,key为数组元素,value为对应下标\r\n        unordered_map<int, int> map;\r\n\r\n        // 遍历数组\r\n        for (int i = 0; i < nums.size(); i++)\r\n        {\r\n            // 计算当前元素需要配对的值\r\n            int a = target - nums[i];\r\n\r\n            // 在哈希表中查找是否存在配对的值\r\n            if (map.count(a))\r\n            {\r\n                // 如果找到,返回两个数的下标\r\n                return {map[a], i};\r\n            }\r\n            // 将当前元素和下标存入哈希表\r\n            map[nums[i]] = i;\r\n        }\r\n        // 未找到符合条件的两个数,返回空数组\r\n        return {};\r\n    }\r\n};"}]}